class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        # Начнем искать с конца
        
        i = j = len(nums) - 1 # Индексы последнего элемента в массиве
        
        while i > 0 and nums[i-1] >= nums[i]:
            i -= 1
        
        # Если i равна нулю, то вся последовательность возрастает и мы просто возращаем
        # перевернутый массив, т.е. убывающую последовательность
        
        if i == 0:
            nums.reverse()
            return
        
        # В другом случае мы нашли элемент, который стоит перед последовательностью, которая
        # не возрастает. В этом случае нужно найти элемент, который больше nums[i]. Такой элемент
        # должен быть в последовательности после nums[i], потому что все что до возрастает
        
        while nums[j] <= nums[i-1]:
            j -= 1
            
        # Теперь наши значения равны:
        # i - первый элемент перед последовательностью начиная с конца
        # j - элемент, который больше nums[i-1]
        
        # Меняем их местами
        nums[i-1], nums[j] = nums[j], nums[i-1]
        
        # Переварачиваем последовательность в конце начинай от элемента с i индексом
        nums[i:]= nums[len(nums)-1:i-1:-1]